############################################################################################
# 		   CONFIGURATION FILE PANDORA FMS PLUGIN FOR POSTGRESQL 
############################################################################################
#
# This file consists of lines of the form:
#
# name=value 
# 
# Comments are introduced with "#" anywhere on a line.
#
# The commented-out settings shown in this file represent the default values.
# Re-commenting a setting is NOT sufficient to revert it to the default value
# you need to reload the Pandora Agent (generally: /etc/init.d/pandora_agent_daemon restart)
#
#############################################################################################
#			      DATA CONECTION DATABASE SECTION
############################################################################################# 
# Name of PostgreSQL database
dbname = postgres

# Ip addres or single domain name may consist of letters, numbers and special characters like "." or "_" or "-"	
host = localhost

# Default port of PostgreSQL 
port = 5432

# Recommended user with administrator privileges 		
username = postgres

# Password to login 	
password = postgres

#############################################################################################
#			ACTIVATION MODULES DEFINED BY USER SECTION
# User Modules, allows users to create their own monitoring functions from sql query
# example:
#
# usermod
# name = "user module"
# description = "user module"
# query := "SELECT count(*) from pg_stat_user_tables;"
# type = "generic" 
# end 
#
# IMPORTANT 
#  1. query = is bad, query := is correct
#  2. If not specified, the default type is "generic"
#     "generic" = generic_data
#     "incremental" = generic_data_inc
#     "string" = generic_data_string
#     "boolean" = generic_proc
#
#############################################################################################

usermod
name = "PSQL Number of roles from the DB"
description = "Number of roles defined in postgres"
query := "SELECT count(*) FROM pg_roles;"
type = "generic"
end

usermod
name = "PSQL Active connections to the database"
description = "Number of active connections to the database"
query := "SELECT count(*) from pg_stat_activity;"
end

usermod
name = "PSQL Version of the DB"
description = "Version of the postgres server"
query := "SELECT version() ;"
type = "string"
end

usermod
name = "PSQL Disk Space in MB"
description = "Total disk space (MB) of all postgres databases"
query := "SELECT ROUND(SUM(pg_database_size(oid))/1024/1024) FROM pg_database;"
#type = "generic"
end

usermod
name = "PSQL Active processes"
description = "Number of active processes on the server"
query := "SELECT sum(xact_rollback) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "generic"
end

usermod
name = "PSQL Data Bases"
description = "Number of data bases in postgres server"
query := "SELECT count(*) FROM pg_database;"
type = "generic"
end

usermod
name = "PSQL Number of commits"
description = "Number of commits made by the server"
query := "SELECT sum(xact_commit) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "PSQL Number of rollbacks"
description = "Number of rollbacks made by the server"
query := "SELECT sum(xact_rollback) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "PSQL Tuples returned"
description = "Number tuples returned by the server"
query := "SELECT sum(tup_returned) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "PSQL Tuples searched"
description = "Tuples searched in postgres server"
query := "SELECT sum(tup_fetched) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "PSQL Tuples inserted"
description = "Tuples inserted in postgres server"
query := "SELECT sum(tup_inserted) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "PSQL Tuples updated"
description = "Tuples updated in postgres server"
query := "SELECT sum(tup_updated) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "PSQL Tuples removed"
description = "Tuples removed in postgres server"
query := "SELECT sum(tup_deleted) FROM (pg_database AS db JOIN pg_stat_database sdb ON db.datname=sdb.datname);"
type = "incremental"
end

usermod
name = "[INCLAM] PSQL Cache Hit Ratio"
description = "Cache Hit ratio (%) (Better <90%)"
query := "SELECT sum(blks_hit)*100/sum(blks_hit+blks_read) AS hit_ratio FROM pg_stat_database;"
type = "generic"
end


usermod
name = "[INCLAM] PSQL blocked clients"
description = "Blocked clients (Better 0)"
query := "SELECT count(*) FROM pg_stat_activity WHERE waiting;"
type = "generic"
end

#usermod
name = "[INCLAM] PSQL blocked transactions"
description = "Blocked transactions (Better > 5)"
query := "SELECT * FROM pg_stat_activity WHERE state IN ('idle in transaction', 'idle in transaction (aborted)');"
type = "generic"
end

usermod
name = "[INCLAM] PSQL anomalies in inserts"
description = "commits/all inserts (Better > 95)"
query := "SELECT AVG((xact_commit*100)/(xact_commit+xact_rollback)) FROM pg_stat_database WHERE (xact_commit+xact_rollback) > 0;"
type = "generic"
end


